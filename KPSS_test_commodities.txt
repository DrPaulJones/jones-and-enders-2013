CALENDAR(M) 1960:1
all 2010:12
open data c:\work\holt\COMMOD_PRIM_WB_11.xls
data(org=cols,format=xls)

*table
dec vector[series] mean(26)

LABELS 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
# 'Maize' 'Wheat' 'Soybeans' 'Sorghum' 'Palmoil' 'Rice' 'Cotton' 'Coffee' 'Cocoa' $
  'Sugar' 'Beef' 'Logs' 'Rubber' 'Iron Ore' 'Copper' 'Tin' 'Lead' 'Zinc' $
  'Gold' 'Silver' 'Oil' 'Coal' 'Freight' 'Food'

com lmax = 36
set trend = t
set tau 1 5 = 0.
dec vector[integer] reglist
compute reglist = || constant ||
dec vector[series] sine(5) dsine(5)
dec vector[series] cosine(5) dcosine(5)
sou c:\work\holt\mylagselect.src

report(action=define)
do i = 3,26
    sta(noprint) [series]i   ; com cap_T = %nobs  , start = 1961:2+612-%nobs
    do k = 1,5
        set sine(k)  start * = sin(2.*%pi*k*t/%nobs)  ; dif sine(k) / dsine(k)
        set cosine(k) start *   = cos(2.*%pi*k*t/%nobs)  ; dif cosine(k) / dcosine(k)
    end do k
    set price = [series]i
     set y = log(100*(price/price(1996:1))/(ppi/ppi(1996:1)))
    dif y / dy
    @lagselect(crit=aic,print=0,maxlag=12) y  start *
     com lags = lagaic

     do k = 1,3
         if k == 1 ; compute reglist = || constant | trend | sine(1) | cosine(1) || , aic_min = 10000000.
         if k > 1  ; enter(varying) reglist ; # reglist sine(k) cosine(k)
        lin(noprint) y start * resids  ; # y{1 to lags} reglist
         compute aic = %nobs*log(%rss) + 2.*(%nreg)
          if (aic < aic_min); com aic_min = aic , kstar = k
      end do k


*     com kstar = 2
     do k = 1,kstar
         if k == 1 ; compute reglist = || dsine(1) | dcosine(1) ||
         if k > 1  ; enter(varying) reglist ; # reglist dsine(k) dcosine(k)
    end do k
    box(constant,ar=lags,ma=1,regressors,noprint) dy /  resids
     # reglist
     if %converged <> 1  {
         do k = 1,kstar
             if k == 1 ; compute reglist = ||trend| sine(1) | cosine(1) ||
             if k > 1  ; enter(varying) reglist ; # reglist sine(k) cosine(k)
        end do k
        box(constant,ar=lags,regressors,noprint) y /  resids
         # reglist
      }

     set y_star = y
     do p = 1,lags
         set y_f start * = %beta(p+1)*y{p}
          set y_star start * = y_star - y_f
     end do p
     do k = 1,kstar
         if k == 1 ; compute reglist = || sine(1) | cosine(1) ||
         if k > 1  ; enter(varying) reglist ; # reglist sine(k) cosine(k)
    end do k

     lin(noprint) y_star start * resids ; # constant trend reglist
     com tstat = %tstats(2)
     if abs(tstat) < 1.96  ; lin(noprint) y_star start * resids ; # constant reglist
     com t$ = 'Yes'
     if abs(tstat) < 1.96 ; com t$ = 'No'
     set sums = 0.
     acc resids / sums

    compute sum2 = 0.0
    do t = start,2010:12
           compute sum2 = sum2 + sums(t)*sums(t)
    end do t

    mcov(lwindow=quadratic,lags=lmax) start * resids
*    mcov(damp=1.,lags=0) start * resids
    # constant
    compute tau(1) = (sum2/%nobs**2)/(%cmom(1,1)/%ndf)
*     dis %LABEL([series]i) tau(1)
    report(atcol=1) %LABEL([series]i) lags kstar tau(1) t$ tstat %converged   %nobs
end do i
     report(window="Output",action=show)
